/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/

#import "MSGraphModels.h"

/**
* The implementation file for type MSGraphEvent.
*/

@implementation MSGraphEvent	

@synthesize odataType = _odataType;
@synthesize Subject = _subject;
@synthesize Body = _body;
@synthesize BodyPreview = _bodyPreview;
@synthesize Importance = _importance;
@synthesize HasAttachments = _hasAttachments;
@synthesize Start = _start;
@synthesize End = _end;
@synthesize Location = _location;
@synthesize ShowAs = _showAs;
@synthesize IsAllDay = _isAllDay;
@synthesize IsCancelled = _isCancelled;
@synthesize IsOrganizer = _isOrganizer;
@synthesize ResponseRequested = _responseRequested;
@synthesize Type = _type;
@synthesize SeriesMasterId = _seriesMasterId;
@synthesize Attendees = _attendees;
@synthesize Recurrence = _recurrence;
@synthesize Organizer = _organizer;
@synthesize StartTimeZone = _startTimeZone;
@synthesize EndTimeZone = _endTimeZone;
@synthesize WebLink = _webLink;
@synthesize Attachments = _attachments;
@synthesize Calendar = _calendar;
@synthesize Instances = _instances;

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.Event";
		_attendees = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphAttendee"];
		_attachments = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphAttachment"];
		_instances = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphEvent"];
    }

	return self;
}

- (void)setSubject:(NSString *) subject {
    _subject = subject;
	[self valueChanged:subject forProperty:@"Subject"];
}
    
- (void)setBody:(MSGraphItemBody *) body {
    _body = body;
	[self valueChanged:body forProperty:@"Body"];
}
    
- (void)setBodyPreview:(NSString *) bodyPreview {
    _bodyPreview = bodyPreview;
	[self valueChanged:bodyPreview forProperty:@"BodyPreview"];
}
    - (void)setImportanceString:(NSString *)value {

	if ([value isEqualToString:@"Low"]) {	

		_importance  = MSGraph_Importance_Low;
        [self valueChangedForInt:MSGraph_Importance_Low forProperty:@"Importance"];
	}

	if ([value isEqualToString:@"Normal"]) {	

		_importance  = MSGraph_Importance_Normal;
        [self valueChangedForInt:MSGraph_Importance_Normal forProperty:@"Importance"];
	}

	if ([value isEqualToString:@"High"]) {	

		_importance  = MSGraph_Importance_High;
        [self valueChangedForInt:MSGraph_Importance_High forProperty:@"Importance"];
	}
}

- (void)setHasAttachments:(BOOL ) hasAttachments {
    _hasAttachments = hasAttachments;
    [self valueChangedForBool:hasAttachments forProperty:@"HasAttachments"];
}
    
- (void)setStart:(NSDate *) start {
    _start = start;
	[self valueChanged:start forProperty:@"Start"];
}
    
- (void)setEnd:(NSDate *) end {
    _end = end;
	[self valueChanged:end forProperty:@"End"];
}
    
- (void)setLocation:(MSGraphLocation *) location {
    _location = location;
	[self valueChanged:location forProperty:@"Location"];
}
    - (void)setShowAsString:(NSString *)value {

	if ([value isEqualToString:@"Free"]) {	

		_showAs  = MSGraph_FreeBusyStatus_Free;
        [self valueChangedForInt:MSGraph_FreeBusyStatus_Free forProperty:@"ShowAs"];
	}

	if ([value isEqualToString:@"Tentative"]) {	

		_showAs  = MSGraph_FreeBusyStatus_Tentative;
        [self valueChangedForInt:MSGraph_FreeBusyStatus_Tentative forProperty:@"ShowAs"];
	}

	if ([value isEqualToString:@"Busy"]) {	

		_showAs  = MSGraph_FreeBusyStatus_Busy;
        [self valueChangedForInt:MSGraph_FreeBusyStatus_Busy forProperty:@"ShowAs"];
	}

	if ([value isEqualToString:@"Oof"]) {	

		_showAs  = MSGraph_FreeBusyStatus_Oof;
        [self valueChangedForInt:MSGraph_FreeBusyStatus_Oof forProperty:@"ShowAs"];
	}

	if ([value isEqualToString:@"WorkingElsewhere"]) {	

		_showAs  = MSGraph_FreeBusyStatus_WorkingElsewhere;
        [self valueChangedForInt:MSGraph_FreeBusyStatus_WorkingElsewhere forProperty:@"ShowAs"];
	}

	if ([value isEqualToString:@"Unknown"]) {	

		_showAs  = MSGraph_FreeBusyStatus_Unknown;
        [self valueChangedForInt:MSGraph_FreeBusyStatus_Unknown forProperty:@"ShowAs"];
	}
}

- (void)setIsAllDay:(BOOL ) isAllDay {
    _isAllDay = isAllDay;
    [self valueChangedForBool:isAllDay forProperty:@"IsAllDay"];
}
    
- (void)setIsCancelled:(BOOL ) isCancelled {
    _isCancelled = isCancelled;
    [self valueChangedForBool:isCancelled forProperty:@"IsCancelled"];
}
    
- (void)setIsOrganizer:(BOOL ) isOrganizer {
    _isOrganizer = isOrganizer;
    [self valueChangedForBool:isOrganizer forProperty:@"IsOrganizer"];
}
    
- (void)setResponseRequested:(BOOL ) responseRequested {
    _responseRequested = responseRequested;
    [self valueChangedForBool:responseRequested forProperty:@"ResponseRequested"];
}
    - (void)setTypeString:(NSString *)value {

	if ([value isEqualToString:@"SingleInstance"]) {	

		_type  = MSGraph_EventType_SingleInstance;
        [self valueChangedForInt:MSGraph_EventType_SingleInstance forProperty:@"Type"];
	}

	if ([value isEqualToString:@"Occurrence"]) {	

		_type  = MSGraph_EventType_Occurrence;
        [self valueChangedForInt:MSGraph_EventType_Occurrence forProperty:@"Type"];
	}

	if ([value isEqualToString:@"Exception"]) {	

		_type  = MSGraph_EventType_Exception;
        [self valueChangedForInt:MSGraph_EventType_Exception forProperty:@"Type"];
	}

	if ([value isEqualToString:@"SeriesMaster"]) {	

		_type  = MSGraph_EventType_SeriesMaster;
        [self valueChangedForInt:MSGraph_EventType_SeriesMaster forProperty:@"Type"];
	}
}

- (void)setSeriesMasterId:(NSString *) seriesMasterId {
    _seriesMasterId = seriesMasterId;
	[self valueChanged:seriesMasterId forProperty:@"SeriesMasterId"];
}
    
- (void)setAttendees:(NSMutableArray *) attendees {
    _attendees = attendees;
	[self valueChanged:attendees forProperty:@"Attendees"];
}
    
- (void)setRecurrence:(MSGraphPatternedRecurrence *) recurrence {
    _recurrence = recurrence;
	[self valueChanged:recurrence forProperty:@"Recurrence"];
}
    
- (void)setOrganizer:(MSGraphRecipient *) organizer {
    _organizer = organizer;
	[self valueChanged:organizer forProperty:@"Organizer"];
}
    
- (void)setStartTimeZone:(NSString *) startTimeZone {
    _startTimeZone = startTimeZone;
	[self valueChanged:startTimeZone forProperty:@"StartTimeZone"];
}
    
- (void)setEndTimeZone:(NSString *) endTimeZone {
    _endTimeZone = endTimeZone;
	[self valueChanged:endTimeZone forProperty:@"EndTimeZone"];
}
    
- (void)setWebLink:(NSString *) webLink {
    _webLink = webLink;
	[self valueChanged:webLink forProperty:@"WebLink"];
}
    
- (void)setAttachments:(NSMutableArray *) attachments {
    _attachments = attachments;
	[self valueChanged:attachments forProperty:@"Attachments"];
}
    
- (void)setCalendar:(MSGraphCalendar *) calendar {
    _calendar = calendar;
	[self valueChanged:calendar forProperty:@"Calendar"];
}
    
- (void)setInstances:(NSMutableArray *) instances {
    _instances = instances;
	[self valueChanged:instances forProperty:@"Instances"];
}
    
@end