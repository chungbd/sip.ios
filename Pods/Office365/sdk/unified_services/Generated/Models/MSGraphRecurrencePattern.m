/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/
#import "MSGraphModels.h"

/**
* The implementation file for type RecurrencePattern.
*/

@implementation MSGraphRecurrencePattern	

@synthesize odataType = _odataType;
@synthesize Type = _type;
@synthesize Interval = _interval;
@synthesize Month = _month;
@synthesize DayOfMonth = _dayOfMonth;
@synthesize DaysOfWeek = _daysOfWeek;
@synthesize FirstDayOfWeek = _firstDayOfWeek;
@synthesize Index = _index;

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.RecurrencePattern";
		_daysOfWeek  = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphDayOfWeek"];
	}

	return self;
}
- (void)setTypeString:(NSString *)value {

	if ([value isEqualToString:@"Daily"]) {

		_type = MSGraph_RecurrencePatternType_Daily;
        [self valueChangedForInt:MSGraph_RecurrencePatternType_Daily forProperty:@"Type"];
	}

	if ([value isEqualToString:@"Weekly"]) {

		_type = MSGraph_RecurrencePatternType_Weekly;
        [self valueChangedForInt:MSGraph_RecurrencePatternType_Weekly forProperty:@"Type"];
	}

	if ([value isEqualToString:@"AbsoluteMonthly"]) {

		_type = MSGraph_RecurrencePatternType_AbsoluteMonthly;
        [self valueChangedForInt:MSGraph_RecurrencePatternType_AbsoluteMonthly forProperty:@"Type"];
	}

	if ([value isEqualToString:@"RelativeMonthly"]) {

		_type = MSGraph_RecurrencePatternType_RelativeMonthly;
        [self valueChangedForInt:MSGraph_RecurrencePatternType_RelativeMonthly forProperty:@"Type"];
	}

	if ([value isEqualToString:@"AbsoluteYearly"]) {

		_type = MSGraph_RecurrencePatternType_AbsoluteYearly;
        [self valueChangedForInt:MSGraph_RecurrencePatternType_AbsoluteYearly forProperty:@"Type"];
	}

	if ([value isEqualToString:@"RelativeYearly"]) {

		_type = MSGraph_RecurrencePatternType_RelativeYearly;
        [self valueChangedForInt:MSGraph_RecurrencePatternType_RelativeYearly forProperty:@"Type"];
	}
}

- (void)setInterval:(int ) interval {
    _interval = interval;
    [self valueChangedForInt:interval forProperty:@"Interval"];
}
    
- (void)setMonth:(int ) month {
    _month = month;
    [self valueChangedForInt:month forProperty:@"Month"];
}
    
- (void)setDayOfMonth:(int ) dayOfMonth {
    _dayOfMonth = dayOfMonth;
    [self valueChangedForInt:dayOfMonth forProperty:@"DayOfMonth"];
}
    
- (void)setDaysOfWeek:(NSMutableArray *) daysOfWeek {
    _daysOfWeek = daysOfWeek;
	[self valueChanged:daysOfWeek forProperty:@"DaysOfWeek"];
}
    - (void)setFirstDayOfWeekString:(NSString *)value {

	if ([value isEqualToString:@"Sunday"]) {

		_firstDayOfWeek = MSGraph_DayOfWeek_Sunday;
        [self valueChangedForInt:MSGraph_DayOfWeek_Sunday forProperty:@"FirstDayOfWeek"];
	}

	if ([value isEqualToString:@"Monday"]) {

		_firstDayOfWeek = MSGraph_DayOfWeek_Monday;
        [self valueChangedForInt:MSGraph_DayOfWeek_Monday forProperty:@"FirstDayOfWeek"];
	}

	if ([value isEqualToString:@"Tuesday"]) {

		_firstDayOfWeek = MSGraph_DayOfWeek_Tuesday;
        [self valueChangedForInt:MSGraph_DayOfWeek_Tuesday forProperty:@"FirstDayOfWeek"];
	}

	if ([value isEqualToString:@"Wednesday"]) {

		_firstDayOfWeek = MSGraph_DayOfWeek_Wednesday;
        [self valueChangedForInt:MSGraph_DayOfWeek_Wednesday forProperty:@"FirstDayOfWeek"];
	}

	if ([value isEqualToString:@"Thursday"]) {

		_firstDayOfWeek = MSGraph_DayOfWeek_Thursday;
        [self valueChangedForInt:MSGraph_DayOfWeek_Thursday forProperty:@"FirstDayOfWeek"];
	}

	if ([value isEqualToString:@"Friday"]) {

		_firstDayOfWeek = MSGraph_DayOfWeek_Friday;
        [self valueChangedForInt:MSGraph_DayOfWeek_Friday forProperty:@"FirstDayOfWeek"];
	}

	if ([value isEqualToString:@"Saturday"]) {

		_firstDayOfWeek = MSGraph_DayOfWeek_Saturday;
        [self valueChangedForInt:MSGraph_DayOfWeek_Saturday forProperty:@"FirstDayOfWeek"];
	}
}
- (void)setIndexString:(NSString *)value {

	if ([value isEqualToString:@"First"]) {

		_index = MSGraph_WeekIndex_First;
        [self valueChangedForInt:MSGraph_WeekIndex_First forProperty:@"Index"];
	}

	if ([value isEqualToString:@"Second"]) {

		_index = MSGraph_WeekIndex_Second;
        [self valueChangedForInt:MSGraph_WeekIndex_Second forProperty:@"Index"];
	}

	if ([value isEqualToString:@"Third"]) {

		_index = MSGraph_WeekIndex_Third;
        [self valueChangedForInt:MSGraph_WeekIndex_Third forProperty:@"Index"];
	}

	if ([value isEqualToString:@"Fourth"]) {

		_index = MSGraph_WeekIndex_Fourth;
        [self valueChangedForInt:MSGraph_WeekIndex_Fourth forProperty:@"Index"];
	}

	if ([value isEqualToString:@"Last"]) {

		_index = MSGraph_WeekIndex_Last;
        [self valueChangedForInt:MSGraph_WeekIndex_Last forProperty:@"Index"];
	}
}

@end