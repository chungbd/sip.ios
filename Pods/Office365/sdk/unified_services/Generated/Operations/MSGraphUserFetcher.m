/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/
#import "MSGraphFetchers.h"

@implementation MSGraphUserFetcher

@synthesize operations = _operations;

- (instancetype)initWithUrl:(NSString *)urlComponent parent:(id<MSOrcExecutable>)parent {

    if (self = [super initWithUrl:urlComponent parent:parent asClass:[MSGraphUser class]]) {

		_operations = [[MSGraphUserOperations alloc] initOperationWithUrl:urlComponent parent:parent];
    }

    return self;
}

- (void)update:(id)entity callback:(void (^)(MSGraphUser *user, MSOrcError *e))callback {

	return [super update:entity callback:callback];
}

- (void)delete:(void (^)(int status, MSOrcError *e))callback {

	return [super deleteWithCallback:callback];
}

- (MSGraphUserFetcher *)addCustomParametersWithName:(NSString *)name value:(id)value {
    [super addCustomParametersWithName:name value:value];
    
    return self;
}

- (MSGraphUserFetcher *)addCustomHeaderWithName:(NSString *)name value:(NSString *)value {
    [super addCustomHeaderWithName:name value:value];
    
    return self;
}

- (MSGraphUserFetcher *)select:(NSString *)params {
    [super select:params];
    
    return self;
}

- (MSGraphUserFetcher *)expand:(NSString *)value {
    [super select:value];
    
    return self;
}

- (void) readWithCallback:(void (^)(MSGraphUser *user, MSOrcError *error))callback {
    [super readWithCallback:^(id response, MSOrcError *error) {
        callback(response, error);
    }];
}

- (MSGraphAppRoleAssignmentCollectionFetcher *)appRoleAssignments {

    return [[MSGraphAppRoleAssignmentCollectionFetcher alloc] initWithUrl:@"appRoleAssignments" parent:self asClass:[MSGraphAppRoleAssignment class]];
}

- (MSGraphAppRoleAssignmentFetcher *)getAppRoleAssignmentsById:(NSString *)id {

    return [[[MSGraphAppRoleAssignmentCollectionFetcher alloc] initWithUrl:@"appRoleAssignments" parent:self asClass:[MSGraphAppRoleAssignment class]] getById:id];
}

- (MSGraphOAuth2PermissionGrantCollectionFetcher *)oauth2PermissionGrants {

    return [[MSGraphOAuth2PermissionGrantCollectionFetcher alloc] initWithUrl:@"oauth2PermissionGrants" parent:self asClass:[MSGraphOAuth2PermissionGrant class]];
}

- (MSGraphOAuth2PermissionGrantFetcher *)getOauth2PermissionGrantsById:(NSString *)id {

    return [[[MSGraphOAuth2PermissionGrantCollectionFetcher alloc] initWithUrl:@"oauth2PermissionGrants" parent:self asClass:[MSGraphOAuth2PermissionGrant class]] getById:id];
}

- (MSGraphDirectoryObjectCollectionFetcher *)ownedDevices {

    return [[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"ownedDevices" parent:self asClass:[MSGraphDirectoryObject class]];
}

- (MSGraphDirectoryObjectFetcher *)getOwnedDevicesById:(NSString *)id {

    return [[[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"ownedDevices" parent:self asClass:[MSGraphDirectoryObject class]] getById:id];
}

- (MSGraphDirectoryObjectCollectionFetcher *)registeredDevices {

    return [[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"registeredDevices" parent:self asClass:[MSGraphDirectoryObject class]];
}

- (MSGraphDirectoryObjectFetcher *)getRegisteredDevicesById:(NSString *)id {

    return [[[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"registeredDevices" parent:self asClass:[MSGraphDirectoryObject class]] getById:id];
}

- (MSGraphDirectoryObjectFetcher *)manager {

	 return [[MSGraphDirectoryObjectFetcher alloc] initWithUrl:@"manager" parent:self asClass:[MSGraphDirectoryObject class]];
}

- (MSGraphDirectoryObjectCollectionFetcher *)directReports {

    return [[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"directReports" parent:self asClass:[MSGraphDirectoryObject class]];
}

- (MSGraphDirectoryObjectFetcher *)getDirectReportsById:(NSString *)id {

    return [[[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"directReports" parent:self asClass:[MSGraphDirectoryObject class]] getById:id];
}

- (MSGraphDirectoryObjectCollectionFetcher *)memberOf {

    return [[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"memberOf" parent:self asClass:[MSGraphDirectoryObject class]];
}

- (MSGraphDirectoryObjectFetcher *)getMemberOfById:(NSString *)id {

    return [[[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"memberOf" parent:self asClass:[MSGraphDirectoryObject class]] getById:id];
}

- (MSGraphDirectoryObjectCollectionFetcher *)createdObjects {

    return [[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"createdObjects" parent:self asClass:[MSGraphDirectoryObject class]];
}

- (MSGraphDirectoryObjectFetcher *)getCreatedObjectsById:(NSString *)id {

    return [[[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"createdObjects" parent:self asClass:[MSGraphDirectoryObject class]] getById:id];
}

- (MSGraphDirectoryObjectCollectionFetcher *)ownedObjects {

    return [[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"ownedObjects" parent:self asClass:[MSGraphDirectoryObject class]];
}

- (MSGraphDirectoryObjectFetcher *)getOwnedObjectsById:(NSString *)id {

    return [[[MSGraphDirectoryObjectCollectionFetcher alloc] initWithUrl:@"ownedObjects" parent:self asClass:[MSGraphDirectoryObject class]] getById:id];
}

- (MSGraphMessageCollectionFetcher *)messages {

    return [[MSGraphMessageCollectionFetcher alloc] initWithUrl:@"Messages" parent:self asClass:[MSGraphMessage class]];
}

- (MSGraphMessageFetcher *)getMessagesById:(NSString *)id {

    return [[[MSGraphMessageCollectionFetcher alloc] initWithUrl:@"Messages" parent:self asClass:[MSGraphMessage class]] getById:id];
}

- (MSGraphCalendarCollectionFetcher *)calendars {

    return [[MSGraphCalendarCollectionFetcher alloc] initWithUrl:@"Calendars" parent:self asClass:[MSGraphCalendar class]];
}

- (MSGraphCalendarFetcher *)getCalendarsById:(NSString *)id {

    return [[[MSGraphCalendarCollectionFetcher alloc] initWithUrl:@"Calendars" parent:self asClass:[MSGraphCalendar class]] getById:id];
}

- (MSGraphCalendarFetcher *)calendar {

	 return [[MSGraphCalendarFetcher alloc] initWithUrl:@"Calendar" parent:self asClass:[MSGraphCalendar class]];
}

- (MSGraphCalendarGroupCollectionFetcher *)calendarGroups {

    return [[MSGraphCalendarGroupCollectionFetcher alloc] initWithUrl:@"CalendarGroups" parent:self asClass:[MSGraphCalendarGroup class]];
}

- (MSGraphCalendarGroupFetcher *)getCalendarGroupsById:(NSString *)id {

    return [[[MSGraphCalendarGroupCollectionFetcher alloc] initWithUrl:@"CalendarGroups" parent:self asClass:[MSGraphCalendarGroup class]] getById:id];
}

- (MSGraphEventCollectionFetcher *)events {

    return [[MSGraphEventCollectionFetcher alloc] initWithUrl:@"Events" parent:self asClass:[MSGraphEvent class]];
}

- (MSGraphEventFetcher *)getEventsById:(NSString *)id {

    return [[[MSGraphEventCollectionFetcher alloc] initWithUrl:@"Events" parent:self asClass:[MSGraphEvent class]] getById:id];
}

- (MSGraphEventCollectionFetcher *)calendarView {

    return [[MSGraphEventCollectionFetcher alloc] initWithUrl:@"CalendarView" parent:self asClass:[MSGraphEvent class]];
}

- (MSGraphEventFetcher *)getCalendarViewById:(NSString *)id {

    return [[[MSGraphEventCollectionFetcher alloc] initWithUrl:@"CalendarView" parent:self asClass:[MSGraphEvent class]] getById:id];
}

- (MSGraphPhotoFetcher *)userPhoto {

	 return [[MSGraphPhotoFetcher alloc] initWithUrl:@"UserPhoto" parent:self asClass:[MSGraphPhoto class]];
}

- (MSGraphPhotoCollectionFetcher *)userPhotos {

    return [[MSGraphPhotoCollectionFetcher alloc] initWithUrl:@"UserPhotos" parent:self asClass:[MSGraphPhoto class]];
}

- (MSGraphPhotoFetcher *)getUserPhotosById:(NSString *)id {

    return [[[MSGraphPhotoCollectionFetcher alloc] initWithUrl:@"UserPhotos" parent:self asClass:[MSGraphPhoto class]] getById:id];
}

- (MSGraphDriveFetcher *)drive {

	 return [[MSGraphDriveFetcher alloc] initWithUrl:@"drive" parent:self asClass:[MSGraphDrive class]];
}

- (MSGraphItemCollectionFetcher *)files {

    return [[MSGraphItemCollectionFetcher alloc] initWithUrl:@"files" parent:self asClass:[MSGraphItem class]];
}

- (MSGraphItemFetcher *)getFilesById:(NSString *)id {

    return [[[MSGraphItemCollectionFetcher alloc] initWithUrl:@"files" parent:self asClass:[MSGraphItem class]] getById:id];
}

@end